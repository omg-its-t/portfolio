// menu button

.menu-btn{
  position: absolute;      //will always stay in upper corner
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  @include easeOut;

  .btn-line{
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: set-text-color($primary-color);
    @include easeOut;
  }

  //rotate hamburger into X
  &.close{
    transform:rotate(180deg);

    .btn-line{
      //line 1 - rotate
      &:nth-child(1){
        transform: rotate(45deg) translate(5px, 5px);
      }
      //line 2 - hide
      &:nth-child(2){
        opacity: 0;
      }
      //line 3 - rotate
      &:nth-child(3){
        transform: rotate(-45deg) translate(6px, -6px);
      }
    }
  }
}

//menu overlay
.menu{
  position: fixed;
  top: 0;
  width: 100%;
  opacity: 0.9;
  visibility: hidden;

  &.show{
    visibility: visible;
  }
  // these are styles for both
  &-branding,   // with the nesting this is targeting .menu-branding
  &-nav{        // this means .menu-nav
    display: flex;                // make into 2 colums
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: left;
    width:50%;      // splits the area even down center
    height: 100vh; // 100 slices of the viewport
     overflow: hidden;
  }

  //nav side (right side with menu)
  &-nav{
    margin: 0;
    padding: 0;
    background-color: darken($primary-color, 5);
    list-style: none;
    transform: translate3d(0, -100%, 0);
    @include easeOut;

    &.show{
      //make it slide in from top when show is applied
      transform: translate3d(0, 0, 0);
    }
  }

  //branding side (left side with pic)
  &-branding{
    background-color: $primary-color;
    transform: translate3d(0, 100%, 0);
    @include easeOut;

    &.show{
      //make it slide in from bottom when show is applied
      transform: translate3d(0, 0, 0);
    }

    .portrait{
      width: 250px;
      height: 250px;
      background: url('../img/theo-portrait.gif');
      border-radius: 50%;
      border: solid 3px $secondary-color;
    }
  }
  .nav-item{
    //starts off the screen
    transform: translate3d(600px, 0, 0);
    @include easeOut;

    &.show{
      //slide in from right
      transform: translate3d(0, 0, 0);
    }

    //the link is what we want to color
    &.current > a{
      color: $secondary-color;
    }
  }

  // just to be clear this is .menu.navlink
  .nav-link{
    display: inline-block;
    position: relative;
    font-size: 30px;
    text-transform: uppercase;
    padding: 1rem 0;
    font-weight: 300;
    color: set-text-color($primary-color);
    text-decoration: none;
    @include easeOut;

    &:hover{
      color: $secondary-color;
    }
  }
}

// delay each nav items slide in when hamburger is clicked
// 1 - 4 because we have 4 menu items
// this loops through them assigns them to $x
// and adds a delay of 1*.1s to first, 2*.1s to second... so on
@for $x from 1 through 4{
  .nav-item:nth-child(#{$x}){
    transition-delay: $x * 0.1s;
  }
}
